#!/bin/bash

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help()
{
  echo "Usage: tradelog [-h|--help]"
  echo "       tradelog [FILTER...] [COMMAND] [LOG...]"
  echo ""
}

COMMAND=""

AFTER="0000-00-00 00:00:00"
BEFORE="9999-99-99 99:99:99"

TICKER=""
OUTPUT=""
WIDTH=""

if [ "$1" = "--help" ]; then
  print_help
  exit 0
fi


WIDTH_CHECK=1
GETPOPTS_CHECK=""
while getopts "a:b:t:w:h" args; do
  GETPOPTS_CHECK=" "
  case "$args" in
    a)
      AFTER="$OPTARG"
    ;;
    b)
      BEFORE="$OPTARG"
    ;;
    t)
      TICKER="$TICKER$OPTARG;"
    ;;
    w)
      if [ "$WIDTH_CHECK" -eq 1 ]; then
        WIDTH="$OPTARG"
        WIDTH_CHECK=0
      else
        echo "moc width"
      exit 1
      fi
    ;;
    h)
      print_help
      exit 0
    ;;
    \?)
      echo "Spatny prepinac"
      exit 1
    ;;
    : )
      echo "Ocekavame soubory na stdin"
    ;;
    *)
      echo "ada"
      exit 1
    ;;
  esac
done

#COMMAND FILTRATION
shift $((OPTIND-1))

#FILE(S) SAVED TO VARIABLE
counter=1
for file in "$@"; do
  if [ ! -f "$file" ] && [ "$counter" -eq 1 ]; then
    COMMAND="$file"
  fi
  if [ "${file##*.}" = "gz" ]; then
    OUTPUT=$(echo)"${OUTPUT}"$(zcat "$file")
  fi
  if [ "${file##*.}" = "log" ]; then
    OUTPUT=$(echo)"${OUTPUT}"$(cat "$file")
  fi
  if [ $counter -ne $# ] && [ -f "$file" ]; then
    OUTPUT="${OUTPUT}\n"
  fi
  counter=$((counter+1))
done

#AFTER IS SET
if [ "$AFTER" != "" ]; then
  OUTPUT=$(echo "$OUTPUT" |  awk -F ';' -v AFTER="$AFTER" '{if ($1 > AFTER) {print}}')
fi

#BEFORE IS SET
if [ "$BEFORE" != "" ]; then
  OUTPUT=$(echo "$OUTPUT" |  awk -F ';' -v BEFORE="$BEFORE" '{if ($1 < BEFORE) {print}}')
fi

#TICKER IS SET
if [ "$TICKER" != "" ]; then
  OUTPUT=$(echo "$OUTPUT" | awk -F ';' -v TICKER="$TICKER" 'BEGIN{n = split(TICKER, tic)} {for(i = 1; i <= n; i++) if($2 == tic[i]) print}')
fi

#WIDTH IS SET
if [ "$WIDTH" != "" ]; then
  echp "TO DO"
fi

if [ "$COMMAND" = "list-tick" ]; then
  OUTPUT=$(echo "$OUTPUT" | awk -F ';' '{print $2}' | sort -u)
fi

if [ "$COMMAND" = "profit" ]; then
  OUTPUT=$(echo "$OUTPUT" | awk -F ';' '{ if($3 == "sell") { temp+=$4*$6 } else { temp-=$4*$6 } } END {printf("%.2f", temp)}')
fi

if [ "$COMMAND" = "last-price" ]; then
  OUTPUT=$(echo "$OUTPUT" | awk -F ';' '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }' | awk -F ';' '!seen[$2]++' | awk -F ';' '{print $2 $4}' | sort -k1,1 )
fi

if [ "$COMMAND" = "pos" ]; then
  TEMP=$(echo "$OUTPUT" | awk -F ';' '{print $2}' | sort -u | awk '{var=var";"$1} END { var=substr(var,2) ;print var}' )
  echo "$TEMP"
  OUTPUT=$(echo "$OUTPUT" | awk -F ';' -v TEMP="$TEMP" 'BEGIN{n = split(TEMP, tmp); len = 10} {for(i = 1; i <= n; i++) { if($2 == tmp[i]){ if($3 == "buy") { sum[i]+=$6 } else { sum[i]-=$6 } a[i]=$4 } } } END { max = 0;for ( i = 1; i <= n; i++){set=sprintf("%s", (sum[i]*a[i]));if (len > max) { max = len} } for(i = 1; i <= n; i++){ printf("%-10s: %*.2f\n", tmp[i], (max + 1), sum[i]*a[i]) } }' | sort -r -n -t ':' -k2)
  echo "$OUTPUT"
  exit 0
fi

echo "$OUTPUT"

exit 0
